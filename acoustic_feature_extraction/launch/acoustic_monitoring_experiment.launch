<launch>
  <!-- parameter definition -->
  <arg name="gui" default="true" />
  
  <!-- arecord -l will show available input devices, use the car number as
  the first number and the subdevice number as the second in a string
  like hw:1,0 -->
  <arg name="device" default="hw:0,0" />
  <arg name="output"      default="screen"/>
  <arg name="bitrate" default="128"/>
  <arg name="channels" default="1"/>
  <arg name="sample_rate" default="44100"/>
  <arg name="format" default="wave"/>
  <arg name="sample_format" default="S16LE"/>
  <arg name="ns" default=""/>
  <arg name="audio_topic" default="/audio"/>
  <arg name="dst" default="/home/lequn/temp_data/temp.wav"/>
  

  <!-- publish audio data as wav format (raw signal) to a topic -->
  <!-- <group ns="$(arg ns)"> -->
    <node name="audio_capture" pkg="audio_capture" type="audio_capture" output="screen">
      <param name="depth" value="16" />
      <param name="device" value="$(arg device)" />
      <!-- <param name="bitrate" value="$(arg bitrate)"/> -->
      <param name="channels" value="$(arg channels)"/>
      <param name="sample_rate" value="$(arg sample_rate)"/>
      <param name="sample_format" value="$(arg sample_format)"/>
      <param name="format" value="$(arg format)"/>
    </node>
  <!-- </group> -->

  <!-- convert the raw signal to msg with header stamps -->
  <node name="audio_converter" pkg="audio_capture_convert" type="converter_node.py" output="$(arg output)">
    <remap from="audio" to="$(arg audio_topic)" />
  </node>

  <!-- noise filtering node, based on frequnecy  -->
  <!-- <node name="audio_filter" pkg="acoustic_feature_extraction" type="filter_node.py" output="$(arg output)" /> -->

  <node name="acoustic_signatures" pkg="acoustic_feature_extraction" type="acoustic_feature_extraction.py"/>


  <!-- <include file="$(find simtech_robot_laser_control)/launch/robot_laser_pid_control.launch">
  </include> -->

  <!-- data recording  -->
  <include file="$(find audio_play)/launch/play.launch">
    <arg name="dst" default="$(arg dst)"/>
  </include>

  <!-- <node pkg="rosbag" type="record" name="rosbag_record_acoustic_experiment" 
    args="-O /home/chenlequn/SIMTech_ws/src/acoustic_monitoring/data/KUKA_printing_SS_recording_6.bag /audio /audioStamped /acoustic_feature" /> -->

  <!-- /position /velocity /twist /usb_cam/geometry" -->

  <!-- data visualisation  -->
  <node name="plot_acoustic_signature" pkg="plotjuggler" type="plotjuggler" />/
  <!-- <node name="plot_nit" pkg="rqt_plot" type="rqt_plot" args="/usb_cam/geometry/minor_axis /usb_cam/moments/minor_axis" if="$(arg gui)" /> -->
  <!-- <node name="plot_acoustic" pkg="rqt_plot" type="rqt_plot" args="/acoustic_feature/rms_energy" if="$(arg gui)"/> -->
  <!-- <node name="plot_acoustic_signature" pkg="rqt_multiplot" type="rqt_multiplot" /> -->

</launch>

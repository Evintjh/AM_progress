<launch>

<!-- acoustic_feature_extraction launcher-->
  <arg name="gui" default="true" />
  <arg name="sim" default="false" />
  
  
  <!-- arecord -l will show available input devices, use the car number as
  the first number and the subdevice number as the second in a string
  like hw:1,0 -->
  <arg name="device" default="hw:0,0" />
  <arg name="output"      default="screen"/>
  <arg name="bitrate" default="128"/>
  <arg name="channels" default="1"/>
  <arg name="sample_rate" default="44100"/>
  <arg name="format" default="wave"/>
  <arg name="sample_format" default="S16LE"/>
  <arg name="ns" default=""/>
  <arg name="audio_topic" default="/audio"/>
 

  <!-- publish audio data as wav format (raw signal) to a topic -->
  <!-- <group ns="$(arg ns)"> -->
  <node name="audio_capture" pkg="audio_capture" type="audio_capture" output="screen">
    <param name="depth" value="16" />
    <param name="device" value="$(arg device)" />
    <!-- <param name="bitrate" value="$(arg bitrate)"/> -->
    <param name="channels" value="$(arg channels)"/>
    <param name="sample_rate" value="$(arg sample_rate)"/>
    <param name="sample_format" value="$(arg sample_format)"/>
    <param name="format" value="$(arg format)"/>
  </node>
  <!-- </group> -->

  <!-- convert the raw signal to msg with header stamps -->
  <node name="audio_converter" pkg="audio_capture_convert" type="converter_node.py" output="$(arg output)">
    <remap from="audio" to="$(arg audio_topic)" />
  </node>


  <node name="acoustic_signatures" pkg="acoustic_feature_extraction" type="acoustic_feature_extraction.py"/>




<!-- pid launcher -->
  <!-- define the powder, process, material parameters -->
  <!-- <rosparam command="load" file="$(find laam_laser_control)/config/params.yaml" /> -->

  <!--<param name="/use_sim_time" value="$(arg sim)" /> -->
    <!--launch file always run the main file, which will execute the cpp file, which uses the hpp file-->
    <node name="laser_control" pkg="laam_laser_control" type="main" output="screen" >               
      <param name="Kp" value="5.0" />
      <param name="Ki" value="0.2" />
      <param name="Kd" value="0.0" />
      <param name="upper_limit" value="1500" />
      <param name="lower_limit" value="0" />
      <param name="windup_limit" value="10" />
      <param name="cutoff_frequency" value="20" />
      <param name="max_loop_frequency" value="100.0" />                   
      <param name="min_loop_frequency" value="100.0" />
      <param name="setpoint_timeout" value="-1.0" />
     </node>												

<!--    <node name="sim_node" pkg="laam_laser_control" type="CPP_plant_sim" output="screen" >  -->
<!--      <param name="plant_order" value="2" />  -->
<!--    </node>  -->

   <!-- <node name="setpoint_node" pkg="pid" type="setpoint_node" output="screen" />-->

    <!-- rqt_plot is a resource hog, so if you're seeing high CPU usage, don't launch rqt_plot  -->
    <node name="rqt_plot" pkg="rqt_plot" type="rqt_plot"
    args="/control_effort/data /acoustic_feature/rms_energy /control/setpoint/setpoint" />

    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />

    <node name="rqt_robot_monitor" pkg="rqt_robot_monitor" type="rqt_robot_monitor" />
</launch>
